{"version":3,"file":"js/app.js","mappings":"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","sources":["webpack://SophosicChat/webpack/universalModuleDefinition","webpack://SophosicChat/./src/components/ChatWidget/ServiceStatus.vue","webpack://SophosicChat/./src/components/ChatWidget/ServiceStatus.vue?534f","webpack://SophosicChat/./src/components/ChatWidget/SystemStatusPage.vue","webpack://SophosicChat/./src/components/ChatWidget/SystemStatusPage.vue?4098","webpack://SophosicChat/./src/components/ChatWidget/theme.js","webpack://SophosicChat/./src/components/ChatWidget/ChatWidget.vue","webpack://SophosicChat/./src/lib.js","webpack://SophosicChat/external umd {\"root\":\"Vue\",\"commonjs\":\"vue\",\"commonjs2\":\"vue\",\"amd\":\"vue\"}","webpack://SophosicChat/webpack/bootstrap","webpack://SophosicChat/webpack/runtime/chunk loaded","webpack://SophosicChat/webpack/runtime/define property getters","webpack://SophosicChat/webpack/runtime/global","webpack://SophosicChat/webpack/runtime/hasOwnProperty shorthand","webpack://SophosicChat/webpack/runtime/make namespace object","webpack://SophosicChat/webpack/runtime/runtimeId","webpack://SophosicChat/webpack/runtime/jsonp chunk loading","webpack://SophosicChat/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vue\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"SophosicChat\", [\"vue\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SophosicChat\"] = factory(require(\"vue\"));\n\telse\n\t\troot[\"SophosicChat\"] = factory(root[\"Vue\"]);\n})(typeof self !== 'undefined' ? self : this, (__WEBPACK_EXTERNAL_MODULE__154__) => {\nreturn ","<template>\n  <div v-if=\"overallStatus.status !== 'OK'\" class=\"service-status\">\n    <!-- Collapsible header -->\n    <div class=\"status-header\" @click=\"isExpanded = !isExpanded\">\n      <div class=\"status-summary\">\n        <span class=\"dot\" :class=\"overallStatus.status.toLowerCase()\"></span>\n        <h3 class=\"status-title\">\n          {{ isExpanded ? 'Service Status' : getSummaryText() }}\n        </h3>\n      </div>\n      <button class=\"expand-button\" :class=\"{ 'is-expanded': isExpanded }\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n          <polyline points=\"6 9 12 15 18 9\"></polyline>\n        </svg>\n      </button>\n    </div>\n\n    <!-- Expandable content -->\n    <div class=\"status-grid\" v-show=\"isExpanded\">\n      <div v-for=\"service in services\" \n           :key=\"service.name\" \n           class=\"status-item\">\n        <div class=\"status-icon\">\n          <span class=\"dot\" :class=\"service.status.toLowerCase()\"></span>\n        </div>\n        <div class=\"status-details\">\n          <span class=\"service-name\">\n            {{ service.name }}\n            <a :href=\"service.statusPageUrl\" \n               target=\"_blank\" \n               rel=\"noopener noreferrer\" \n               class=\"status-link\"\n               title=\"View detailed status\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n                <path d=\"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6\"></path>\n                <polyline points=\"15 3 21 3 21 9\"></polyline>\n                <line x1=\"10\" y1=\"14\" x2=\"21\" y2=\"3\"></line>\n              </svg>\n            </a>\n          </span>\n          <span class=\"status-text\">{{ service.statusText }}</span>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ServiceStatus',\n  data() {\n    return {\n      isExpanded: false,\n      services: [\n        {\n          name: 'Primary AI Agent',\n          status: 'OK',\n          statusText: 'Operational',\n          endpoint: 'https://api.anthropic.com/v1/messages',\n          model: 'claude-3-5-sonnet-20241022',\n          statusPageUrl: 'https://status.anthropic.com/'\n        },\n        {\n          name: 'Knowledge Base',\n          status: 'OK',\n          statusText: 'Operational',\n          components: [\n            {\n              name: 'Vector Database',\n              endpoint: 'https://api.pinecone.io',\n              namespace: 'company-knowledgebase',\n              statusPageUrl: 'https://status.pinecone.io/'\n            },\n            {\n              name: 'Embeddings Service',\n              endpoint: 'https://api.openai.com/v1/embeddings',\n              model: 'text-embedding-ada-002',\n              statusPageUrl: 'https://status.openai.com/'\n            },\n            {\n              name: 'LLM Processing',\n              endpoint: 'https://api.groq.com/v1/chat/completions',\n              model: 'llama-3.3-70b-versatile',\n              statusPageUrl: 'https://groqstatus.com/',\n              details: {\n                contextLength: '128k',\n                speed: '276 tokens/sec',\n                pricing: {\n                  input: '$0.59/M tokens',\n                  output: '$0.79/M tokens'\n                }\n              }\n            }\n          ],\n          statusPageUrl: 'https://status.pinecone.io/'\n        },\n        {\n          name: 'Sophosic Backend',\n          status: 'OK',\n          statusText: 'Operational',\n          endpoint: 'https://n8n.sophosic.ai',\n          statusPageUrl: 'https://status.render.com/'\n        }\n      ],\n      checkInterval: null\n    }\n  },\n  methods: {\n    async checkServiceStatus(service) {\n      try {\n        if (service.name === 'Knowledge Base') {\n          // Check all components of the Knowledge Base\n          let componentStatuses = await Promise.all(service.components.map(async (component) => {\n            let statusUrl;\n            let status = 'OK';\n            let statusText = 'Operational';\n\n            switch(component.name) {\n              case 'Vector Database':\n                statusUrl = 'https://status.pinecone.io/api/v2/status.json';\n                break;\n              case 'Embeddings Service':\n                statusUrl = 'https://status.openai.com/api/v2/status.json';\n                break;\n              case 'LLM Processing':\n                statusUrl = 'https://groqstatus.com/api/v2/status.json';\n                break;\n            }\n\n            try {\n              const response = await fetch(statusUrl);\n              const data = await response.json();\n              \n              if (data.status.indicator === 'none') {\n                status = 'OK';\n                statusText = 'Operational';\n              } else if (data.status.indicator === 'minor') {\n                status = 'WARN';\n                statusText = 'Degraded Performance';\n              } else {\n                status = 'CRIT';\n                statusText = 'Service Disruption';\n              }\n            } catch (error) {\n              console.error(`Error checking ${component.name} status:`, error);\n              status = 'WARN';\n              statusText = 'Status Unknown';\n            }\n\n            return { status, statusText };\n          }));\n\n          // Determine overall Knowledge Base status\n          if (componentStatuses.some(s => s.status === 'CRIT')) {\n            service.status = 'CRIT';\n            service.statusText = 'Service Disruption';\n          } else if (componentStatuses.some(s => s.status === 'WARN')) {\n            service.status = 'WARN';\n            service.statusText = 'Degraded Performance';\n          } else if (componentStatuses.every(s => s.status === 'OK')) {\n            service.status = 'OK';\n            service.statusText = 'Operational';\n          } else {\n            service.status = 'WARN';\n            service.statusText = 'Partially Operational';\n          }\n        } else {\n          // Handle other services as before\n          let statusUrl;\n          switch(service.name) {\n            case 'Primary AI Agent':\n              statusUrl = 'https://status.anthropic.com/api/v2/status.json';\n              break;\n            case 'Sophosic Backend':\n              statusUrl = 'https://status.render.com/api/v2/status.json';\n              break;\n          }\n\n          if (statusUrl) {\n            const response = await fetch(statusUrl);\n            const data = await response.json();\n            this.updateServiceStatus(service, data);\n          }\n        }\n      } catch (error) {\n        console.error(`Error checking ${service.name} status:`, error);\n        service.status = 'WARN';\n        service.statusText = 'Status Unknown';\n      }\n    },\n\n    updateServiceStatus(service, data) {\n      if (data.status.indicator === 'none') {\n        service.status = 'OK';\n        service.statusText = 'Operational';\n      } else if (data.status.indicator === 'minor') {\n        service.status = 'WARN';\n        service.statusText = 'Degraded Performance';\n      } else {\n        service.status = 'CRIT';\n        service.statusText = 'Service Disruption';\n      }\n    },\n    \n    async checkAllServices() {\n      for (const service of this.services) {\n        await this.checkServiceStatus(service);\n      }\n    },\n\n    getSummaryText() {\n      if (this.overallStatus.status === 'OK') {\n        return 'All Systems Operational';\n      } else if (this.overallStatus.status === 'WARN') {\n        return 'Degraded Performance';\n      } else if (this.overallStatus.status === 'CRIT') {\n        return 'Service Disruption';\n      }\n      return 'Checking System Status...';\n    }\n  },\n  mounted() {\n    // Check status immediately\n    this.checkAllServices();\n    \n    // Then check every 5 minutes\n    this.checkInterval = setInterval(() => {\n      this.checkAllServices();\n    }, 5 * 60 * 1000);\n  },\n  beforeUnmount() {\n    if (this.checkInterval) {\n      clearInterval(this.checkInterval);\n    }\n  },\n  computed: {\n    overallStatus() {\n      // If any service is CRIT, overall status is CRIT\n      if (this.services.some(service => service.status === 'CRIT')) {\n        return {\n          status: 'CRIT',\n          statusText: 'Service Disruption'\n        };\n      }\n      // If any service is WARN, overall status is WARN\n      if (this.services.some(service => service.status === 'WARN')) {\n        return {\n          status: 'WARN',\n          statusText: 'Degraded Performance'\n        };\n      }\n      // If all services are OK, overall status is OK\n      if (this.services.every(service => service.status === 'OK')) {\n        return {\n          status: 'OK',\n          statusText: 'Operational'\n        };\n      }\n      // Default status if any service is unknown\n      return {\n        status: 'WARN',\n        statusText: 'Partially Operational'\n      };\n    }\n  },\n  watch: {\n    overallStatus: {\n      handler(newStatus) {\n        this.$emit('status-changed', newStatus);\n      },\n      deep: true\n    }\n  }\n}\n</script>","import { render } from \"./ServiceStatus.vue?vue&type=template&id=03185770\"\nimport script from \"./ServiceStatus.vue?vue&type=script&lang=js\"\nexport * from \"./ServiceStatus.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"chat-container\">\n    <div class=\"system-status-content\">\n      <div class=\"status-card\">\n        <div class=\"overall-status\" :class=\"overallStatus.status.toLowerCase()\">\n          <span class=\"dot\" :class=\"overallStatus.status.toLowerCase()\"></span>\n          <h2>{{ getSummaryText() }}</h2>\n        </div>\n\n        <div class=\"services-grid\">\n          <div v-for=\"service in services\" \n               :key=\"service.name\" \n               class=\"status-item\">\n            <div class=\"status-icon\">\n              <span class=\"dot\" :class=\"service.status.toLowerCase()\"></span>\n            </div>\n            <div class=\"status-details\">\n              <div class=\"service-header\">\n                <div class=\"service-title\">\n                  <span class=\"service-name\">{{ service.name }}</span>\n                </div>\n                <button v-if=\"service.components\"\n                        class=\"status-link expand-button\"\n                        :class=\"{ 'is-expanded': expandedServices[service.name] }\"\n                        @click=\"toggleService(service.name)\"\n                        title=\"View components\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n                    <polyline points=\"6 9 12 15 18 9\"></polyline>\n                  </svg>\n                </button>\n                <a v-else \n                   :href=\"service.statusPageUrl\" \n                   target=\"_blank\" \n                   rel=\"noopener noreferrer\" \n                   class=\"status-link\"\n                   title=\"View detailed status\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n                    <path d=\"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6\"></path>\n                    <polyline points=\"15 3 21 3 21 9\"></polyline>\n                    <line x1=\"10\" y1=\"14\" x2=\"21\" y2=\"3\"></line>\n                  </svg>\n                </a>\n              </div>\n              <span class=\"status-text\">{{ service.statusText }}</span>\n              \n              <div v-if=\"service.components\" \n                   class=\"service-components\"\n                   :class=\"{ 'expanded': expandedServices[service.name] }\">\n                <div v-for=\"component in service.components\" \n                     :key=\"component.name\"\n                     class=\"component-item\">\n                  <div class=\"component-header\">\n                    <span class=\"component-name\">{{ component.name }}</span>\n                    <a :href=\"component.statusPageUrl\"\n                       target=\"_blank\"\n                       rel=\"noopener noreferrer\"\n                       class=\"status-link\"\n                       title=\"View provider status\">\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10\" height=\"10\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n                        <path d=\"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6\"></path>\n                        <polyline points=\"15 3 21 3 21 9\"></polyline>\n                        <line x1=\"10\" y1=\"14\" x2=\"21\" y2=\"3\"></line>\n                      </svg>\n                    </a>\n                  </div>\n                  <div class=\"component-details\">\n                    <span class=\"component-model\">{{ component.model || component.namespace }}</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"powered-by-section\">\n        <a href=\"https://sophosic.ai\" \n           target=\"_blank\" \n           rel=\"noopener noreferrer\"\n           class=\"powered-by-link\">\n          Powered by Sophosic\n        </a>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'SystemStatusPage',\n  props: {\n    services: {\n      type: Array,\n      required: true\n    },\n    overallStatus: {\n      type: Object,\n      required: true\n    }\n  },\n  data() {\n    return {\n      expandedServices: {}\n    }\n  },\n  methods: {\n    getSummaryText() {\n      if (this.overallStatus.status === 'OK') {\n        return 'All Systems Operational';\n      } else if (this.overallStatus.status === 'WARN') {\n        return 'Degraded Performance';\n      } else if (this.overallStatus.status === 'CRIT') {\n        return 'Service Disruption';\n      }\n      return 'Checking System Status...';\n    },\n    toggleService(serviceName) {\n      this.expandedServices[serviceName] = !this.expandedServices[serviceName];\n      this.$forceUpdate(); // Ensure reactivity\n    }\n  }\n}\n</script>\n\n<style scoped>\n.chat-container {\n  flex: 1;\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n}\n\n.system-status-content {\n  flex: 1;\n  padding: 24px;\n  padding-bottom: 0;\n  background: #F8F9FE;\n  display: flex;\n  flex-direction: column;\n}\n\n.status-card {\n  background: white;\n  border-radius: 12px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);\n  margin-bottom: auto;\n}\n\n.services-grid {\n  padding: 16px;\n}\n\n.powered-by-section {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 16px;\n}\n\n.powered-by-link {\n  color: #666666;\n  text-decoration: none;\n  font-family: 'Work Sans', sans-serif;\n  font-size: 14px;\n  transition: color 0.2s ease;\n}\n\n.powered-by-link:hover {\n  color: #5423E7;\n}\n\n.services-grid {\n  padding: 16px;\n}\n\n.status-item {\n  display: flex;\n  align-items: flex-start;\n  padding: 16px;\n  border-radius: 8px;\n  transition: background-color 0.2s ease;\n}\n\n.status-item:hover {\n  background-color: #F3F4F6;\n}\n\n.status-icon {\n  margin-right: 12px;\n  padding-top: 4px;\n}\n\n.status-details {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n}\n\n.service-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 8px;\n}\n\n.service-name {\n  font-size: 16px;\n  font-weight: 500;\n  color: #1E1B3C;\n}\n\n.status-details .status-text {\n  font-size: 14px;\n  color: #6B7280;\n  opacity: 1;\n  transform: none;\n  white-space: normal;\n  display: block;\n  margin-top: 2px;\n}\n\n.status-link {\n  display: inline-flex;\n  align-items: center;\n  color: #1E1B3C;\n  opacity: 0.4;\n  transition: opacity 0.2s ease;\n}\n\n.status-link:hover {\n  opacity: 0.8;\n}\n\n.dot {\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  display: inline-block;\n}\n\n.dot.ok {\n  background-color: #10B981;\n}\n\n.dot.warn {\n  background-color: #F59E0B;\n}\n\n.dot.crit {\n  background-color: #EF4444;\n}\n\n.overall-status {\n  padding: 24px;\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.05);\n}\n\n.overall-status h2 {\n  font-size: 18px;\n  font-weight: 600;\n  margin: 0;\n  color: #1E1B3C;\n}\n\n.service-title {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  flex: 1;\n}\n\n.expand-button {\n  background: none;\n  border: none;\n  padding: 0;\n  cursor: pointer;\n  display: inline-flex;\n  align-items: center;\n  color: #1E1B3C;\n  opacity: 0.4;\n  transition: all 0.2s ease;\n}\n\n.expand-button:hover {\n  opacity: 0.8;\n}\n\n.expand-button.is-expanded svg {\n  transform: rotate(180deg);\n}\n\n.service-components {\n  max-height: 0;\n  overflow: hidden;\n  transition: max-height 0.3s ease-out;\n  margin-top: 0;\n}\n\n.service-components.expanded {\n  max-height: 500px; /* Adjust based on expected content height */\n  margin-top: 12px;\n}\n\n.component-item {\n  padding: 8px 12px;\n  margin-left: 8px;\n  border-left: 1px solid #E5E7EB;\n  font-size: 14px;\n}\n\n.component-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.component-name {\n  color: #4B5563;\n  font-weight: 500;\n}\n\n.component-details {\n  margin-top: 2px;\n}\n\n.component-model {\n  color: #6B7280;\n  font-size: 12px;\n}\n\n/* Ensure smooth transitions */\n.expand-button svg {\n  transition: transform 0.2s ease;\n}\n</style>\n","import { render } from \"./SystemStatusPage.vue?vue&type=template&id=3826e6aa&scoped=true\"\nimport script from \"./SystemStatusPage.vue?vue&type=script&lang=js\"\nexport * from \"./SystemStatusPage.vue?vue&type=script&lang=js\"\n\nimport \"./SystemStatusPage.vue?vue&type=style&index=0&id=3826e6aa&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-3826e6aa\"]])\n\nexport default __exports__","// Base color palette\nconst colors = {\n  primary: '#5423E7',\n  secondary: '#1E1B3C',\n  background: '#F8F9FE',\n  white: '#FFFFFF',\n  gray: {\n    100: '#F8F9FE',\n    200: '#EEF0F6',\n    300: '#E2E4ED',\n    400: '#9CA3AF',\n    500: '#6B7280',\n    600: '#4B5563',\n    700: '#374151',\n    800: '#1E1B3C',\n  },\n  status: {\n    success: '#10B981',\n    warning: '#F59E0B', \n    error: '#EF4444',\n  }\n}\n\n// Theme configuration\nexport const defaultTheme = {\n  header: {\n    background: colors.secondary,\n    text: colors.white,\n    icons: colors.white,\n    buttons: {\n      background: 'rgba(255, 255, 255, 0.1)',\n      hover: 'rgba(255, 255, 255, 0.2)',\n    }\n  },\n  launcher: {\n    background: colors.primary,\n    shadow: 'rgba(84, 35, 231, 0.1)',\n  },\n  messages: {\n    background: colors.background,\n    user: {\n      background: colors.primary,\n      text: colors.white,\n    },\n    bot: {\n      background: colors.white,\n      text: colors.secondary,\n    },\n    timestamp: colors.gray[500],\n  },\n  input: {\n    background: colors.background,\n    text: colors.secondary,\n    placeholder: colors.gray[500],\n    border: colors.gray[300],\n    button: {\n      default: colors.gray[400],\n      active: colors.primary,\n    }\n  },\n  preview: {\n    background: colors.white,\n    text: colors.secondary,\n    timestamp: colors.gray[500],\n    shadow: 'rgba(0, 0, 0, 0.1)',\n  },\n  status: {\n    ok: colors.status.success,\n    warn: colors.status.warning,\n    crit: colors.status.error,\n  }\n}\n\n// Helper to merge custom theme with default theme\nexport function createTheme(customTheme) {\n  return {\n    ...defaultTheme,\n    ...customTheme,\n  }\n} ","/* eslint-disable no-console */\n<template>\n  <div \n    class=\"chat-widget\"\n    :class=\"{ 'is-open': isChatOpen }\"\n  >\n    <!-- Chat Launcher -->\n    <div \n      v-if=\"!isChatOpen\" \n      class=\"chat-launcher\"\n      @click=\"openChat\"\n    >\n      <!-- Recent Chat Preview -->\n      <div \n        v-if=\"previousChats.length > 0 && getMostRecentChatSummary() && !hidePreview\"\n        class=\"recent-chat-preview\"\n        @click.stop=\"resumeRecentChat\"\n      >\n        <div class=\"preview-content\">\n          <div class=\"recent-chat-preview-text\">\n            {{ getMostRecentChatSummary() }}\n          </div>\n          <div class=\"recent-chat-preview-time\">\n            {{ formatDate(previousChats[0]?.timestamp) }}\n          </div>\n        </div>\n        <button \n          class=\"preview-close-button\" \n          @click.stop=\"hidePreview = true\"\n          title=\"Hide preview\"\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n            <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n            <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n          </svg>\n        </button>\n      </div>\n\n      <div \n        class=\"launcher-button\" \n        :class=\"`status-${systemStatus.status.toLowerCase()}`\"\n        :style=\"{ backgroundColor: currentTheme.launcher.background, boxShadow: `0 0 20px ${currentTheme.launcher.shadow}` }\"\n      >\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"white\" stroke=\"none\">\n          <path d=\"M12 21a9 9 0 1 0-9-9c0 1.488.36 2.891 1 4.127L3 21l4.873-1c1.236.64 2.64 1 4.127 1Z\" />\n        </svg>\n      </div>\n    </div>\n\n    <!-- Chat Window -->\n    <div v-else class=\"chat-window\" :style=\"{ backgroundColor: currentTheme.messages.background }\">\n      <!-- Add a wrapper div for better mobile viewport handling -->\n      <div class=\"chat-window-inner\">\n        <!-- Custom header slot -->\n        <div class=\"custom-header\" :style=\"{ backgroundColor: currentTheme.header.background, color: currentTheme.header.text }\">\n          <div class=\"header-left\">\n            <button class=\"back-button\" \n                    v-if=\"!showHomeScreen\"\n                    @click=\"showStatusPage ? (showStatusPage = false, showHomeScreen = true) : (messageList.length > 0 ? goToHome() : null)\" \n                    title=\"Back\"\n                    type=\"button\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n                <path d=\"M19 12H5M12 19l-7-7 7-7\"/>\n              </svg>\n            </button>\n            <div class=\"header-title-container\">\n              <span class=\"header-title\">\n                {{ showStatusPage ? 'System Status' : (showHomeScreen ? 'Sophia' : 'You & Sophia') }}\n              </span>\n              <button v-if=\"!showStatusPage && showHomeScreen\" \n                      class=\"header-status-button\" \n                      @click=\"showSystemStatus\">\n                <div class=\"header-status-dot\" :class=\"systemStatus.status.toLowerCase()\"></div>\n              </button>\n            </div>\n          </div>\n          <div class=\"header-buttons\">\n            <button v-if=\"!showHomeScreen && !showStatusPage\" \n                    class=\"download-button\" \n                    @click=\"downloadTranscript\" \n                    title=\"Download Chat\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n                <path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"></path>\n                <polyline points=\"7 10 12 15 17 10\"></polyline>\n                <line x1=\"12\" y1=\"15\" x2=\"12\" y2=\"3\"></line>\n              </svg>\n            </button>\n            <button v-if=\"!showHomeScreen && !showStatusPage\" \n                    class=\"reset-button\" \n                    @click=\"resetSession\" \n                    title=\"Start New Chat\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n                <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line>\n                <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\n              </svg>\n            </button>\n            <button class=\"close-button\" @click=\"closeChat\" title=\"Close Chat\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n                <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n                <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n              </svg>\n            </button>\n          </div>\n        </div>\n\n        <!-- Message list slot -->\n        <div class=\"chat-container\" :class=\"{ 'keyboard-open': isKeyboardOpen }\">\n          <!-- Home Screen -->\n          <div v-if=\"showHomeScreen\" class=\"chat-home-screen\">\n            <div class=\"home-content-wrapper\">\n              <h1 class=\"home-greeting\">Hi!</h1>\n              <h2 class=\"home-subtitle\">How can we help?</h2>\n              \n              <!-- Start chat button -->\n              <button class=\"start-chat-button\" @click=\"startNewChat\">\n                Start a new chat\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n                  <path d=\"M5 12h14M12 5l7 7-7 7\"/>\n                </svg>\n              </button>\n\n              <service-status \n                ref=\"serviceStatus\"\n                @status-changed=\"onStatusChanged\" \n              />\n              \n              <!-- Previous Chats Section -->\n              <div class=\"previous-chats-section\">\n                <h3 class=\"previous-chats-title\">Recent Conversations</h3>\n                <div v-if=\"previousChats.length > 0\" class=\"chat-list\">\n                  <div v-for=\"chat in displayedChats\" \n                       :key=\"chat.sessionId\" \n                       class=\"chat-item\"\n                       @click=\"loadChat(chat)\">\n                    <div class=\"chat-item-content\">\n                      <div class=\"chat-preview\">{{ getChatPreview(chat) }}</div>\n                      <div class=\"chat-date\">{{ formatDate(chat.timestamp) }}</div>\n                    </div>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n                      <path d=\"M9 18l6-6-6-6\"/>\n                    </svg>\n                  </div>\n                  <button \n                    v-if=\"previousChats.length > 5 && !showAllChats\" \n                    class=\"show-more-button\"\n                    @click=\"showAllChats = true\"\n                  >\n                    Show more\n                  </button>\n                </div>\n                <!-- Add empty state message -->\n                <div v-else class=\"empty-chats-message\">\n                  Your recent chats will appear here.\n                </div>\n              </div>\n\n              <!-- Powered by section -->\n              <div class=\"powered-by-section\">\n                <a href=\"https://sophosic.ai\" \n                   target=\"_blank\" \n                   rel=\"noopener noreferrer\"\n                   class=\"powered-by-link\">\n                  Powered by Sophosic\n                </a>\n                <span class=\"separator\">|</span>\n                <button class=\"system-status-link\" \n                        @click=\"showSystemStatus\">\n                  System Status\n                  <span class=\"status-dot\" :class=\"systemStatus.status.toLowerCase()\"></span>\n                </button>\n              </div>\n            </div>\n          </div>\n\n          <!-- System Status Page -->\n          <system-status-page\n            v-else-if=\"showStatusPage\"\n            :services=\"serviceStatus?.services || []\"\n            :overall-status=\"systemStatus\"\n            @back=\"showStatusPage = false; showHomeScreen = true;\"\n          />\n\n          <!-- Active Chat Messages -->\n          <div v-else class=\"conversation-container\">\n            <div class=\"messages-wrapper\">\n              <div v-for=\"(message, idx) in messageList\" \n                   :key=\"idx\" \n                   class=\"message-item\"\n                   :class=\"[\n                     message.author === 'me' ? 'user-message' : 'bot-message',\n                     {\n                       'thread-start': isBotThreadStart(idx),\n                       'has-thread': isBotThreadStart(idx) && hasFollowingBotMessage(idx),\n                       'thread-middle': isBotThreadMiddle(idx),\n                       'thread-end': isBotThreadEnd(idx)\n                     }\n                   ]\">\n                <div class=\"message-content\">\n                  <div v-if=\"message.author !== 'me'\" \n                       class=\"bot-avatar\"\n                       :class=\"{ 'hidden-avatar': isBotThreadMiddle(idx) || isBotThreadEnd(idx) }\">\n                    <span>S</span>\n                    <span class=\"avatar-status-indicator\" \n                          :class=\"systemStatus.status.toLowerCase()\"\n                          :title=\"systemStatus.statusText\">\n                    </span>\n                  </div>\n                  <div class=\"message-bubble\" \n                       v-html=\"renderMarkdown(message.data.text)\">\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- User input slot -->\n        <div v-if=\"!showHomeScreen && !showStatusPage\" \n             class=\"user-input\" \n             :class=\"{ 'keyboard-open': isKeyboardOpen }\"\n             :style=\"{ backgroundColor: currentTheme.input.background }\">\n          <div class=\"input-wrapper\" \n               :class=\"{ 'bot-typing': showTypingIndicator === 'bot' }\"\n               @click=\"() => console.log('Typing status:', showTypingIndicator)\">\n            <input \n              type=\"text\" \n              v-model=\"newMessage\" \n              placeholder=\"Type a message...\" \n              @keyup.enter=\"sendMessage\"\n              @focus=\"handleInputFocus\"\n              @blur=\"handleInputBlur\"\n              :style=\"{ color: currentTheme.input.text }\"\n              :disabled=\"showTypingIndicator === 'bot'\"\n            />\n            <button \n              @click=\"sendMessage\"\n              :class=\"{ 'active': newMessage.trim().length > 0 }\"\n              :disabled=\"showTypingIndicator === 'bot'\"\n            >\n              <svg v-if=\"showTypingIndicator === 'bot'\" viewBox=\"0 0 24 24\"></svg>\n              <svg v-else xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n                <path d=\"M22 2L11 13M22 2l-7 20-4-9-9-4 20-7z\"/>\n              </svg>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { marked } from 'marked';\nimport ServiceStatus from './ServiceStatus.vue';\nimport SystemStatusPage from './SystemStatusPage.vue';\nimport { defaultTheme } from './theme.js';\n\nconst API_URL = 'https://n8n.sophosic.ai/webhook/e60704a9-52c1-47eb-9037-2344d6b56c21/chat'\n\n/**\n * @typedef {import('./theme').Theme} Theme\n */\n\nconst logError = (error, context) => {\n  if (process.env.NODE_ENV !== 'production') {\n    console.error(`[ChatWidget] ${context}:`, error);\n  }\n};\n\n// Create component without defineComponent since Vue is external\nexport default {\n  name: 'ChatWidget',\n  \n  components: {\n    ServiceStatus,\n    SystemStatusPage\n  },\n\n  props: {\n    /** @type {{ type: ObjectConstructor, default: () => Partial<Theme> }} */\n    theme: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n\n  data() {\n    return {\n      sessionId: '',\n      participants: [\n        {\n          id: 'bot',\n          name: 'Sophia',\n          imageUrl: `data:image/svg+xml;charset=utf-8,${encodeURIComponent(`\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 30 30\">\n              <circle cx=\"15\" cy=\"15\" r=\"15\" fill=\"#5423E7\"/>\n              <text x=\"15\" y=\"20\" \n                font-family=\"Arial, sans-serif\" \n                font-size=\"16\"\n                fill=\"white\" \n                text-anchor=\"middle\"\n                style=\"pointer-events: none;\">S</text>\n            </svg>\n          `)}`\n        }\n      ],\n      apiUrl: API_URL,\n      messageList: [],\n      newMessagesCount: 0,\n      isChatOpen: false,\n      showTypingIndicator: '',\n      newMessage: '',\n      currentTheme: defaultTheme,\n      showHomeScreen: true,\n      previousChats: [], // Array to store previous chat sessions\n      showAllChats: false,\n      systemStatus: {\n        status: 'OK',\n        statusText: 'Operational'\n      },\n      isStatusHovered: false,\n      showStatusPage: false,\n      serviceStatus: null,\n      chatSummary: '',\n      isKeyboardOpen: false,\n      viewportHeight: window.innerHeight,\n      isMobileDevice: false,\n      hidePreview: false,\n    }\n  },\n\n  computed: {\n    displayedChats() {\n      return this.showAllChats \n        ? this.previousChats \n        : this.previousChats.slice(0, 5);\n    },\n    isBotTyping() {\n      return this.showTypingIndicator === 'bot';\n    }\n  },\n\n  created() {\n    // Merge custom theme with default theme\n    this.currentTheme = {\n      ...defaultTheme,\n      ...this.theme\n    }\n\n    // 1) Load session once (sessionId), and load previous chats\n    this.loadSession();\n    this.loadPreviousChats();\n  },\n\n  async mounted() {\n    // Only do the initial API fetch if we *already* have messages\n    if (this.messageList.length > 0) {\n      try {\n        const response = await fetch(API_URL, {\n          method: 'GET',\n          headers: { 'Accept': 'application/json' },\n          credentials: 'omit'\n        });\n        if (!response.ok) throw new Error(`HTTP error: ${response.status}`);\n\n        const rawText = await response.text();\n        console.log('Initial raw response:', rawText);\n\n        const welcomeMessage = this.extractMessage(rawText);\n        if (welcomeMessage && welcomeMessage !== \"I'm here to help! How can I assist you today? (error)\") {\n          this.addMessage({\n            author: 'bot',\n            type: 'text',\n            data: { text: welcomeMessage }\n          });\n        }\n      } catch (error) {\n        console.error('Error loading initial message:', error);\n      }\n    }\n\n    // Initialize serviceStatus when the component is mounted\n    this.$nextTick(() => {\n      if (this.$refs.serviceStatus) {\n        this.serviceStatus = this.$refs.serviceStatus;\n      }\n    });\n\n    // Check if device is mobile\n    this.isMobileDevice = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n      navigator.userAgent\n    );\n    \n    // Only add mobile-specific handlers if on mobile\n    if (this.isMobileDevice) {\n      // Add event listeners for viewport changes\n      window.addEventListener('resize', this.handleViewportResize);\n      \n      // Handle iOS viewport changes\n      if ('visualViewport' in window) {\n        window.visualViewport.addEventListener('resize', this.handleViewportResize);\n      }\n\n      // Set custom viewport height property\n      const setVH = () => {\n        const vh = window.innerHeight * 0.01;\n        document.documentElement.style.setProperty('--vh', `${vh}px`);\n      };\n      \n      setVH();\n      window.addEventListener('resize', setVH);\n      \n      // Update viewport height when keyboard appears\n      if ('visualViewport' in window) {\n        window.visualViewport.addEventListener('resize', () => {\n          const viewport = window.visualViewport;\n          document.documentElement.style.setProperty(\n            '--keyboard-height',\n            `${window.innerHeight - viewport.height}px`\n          );\n          this.scrollToBottom();\n        });\n      }\n    }\n  },\n\n  beforeUnmount() {\n    // Clean up event listeners\n    window.removeEventListener('resize', this.handleViewportResize);\n    if ('visualViewport' in window) {\n      window.visualViewport.removeEventListener('resize', this.handleViewportResize);\n    }\n  },\n\n  methods: {\n    loadSession() {\n      // Only load or create sessionId\n      const savedSessionId = localStorage.getItem('chatSessionId');\n      if (savedSessionId) {\n        this.sessionId = savedSessionId;\n      } else {\n        this.createNewSession();\n      }\n    },\n\n    createNewSession() {\n      this.sessionId = 'session_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);\n      localStorage.setItem('chatSessionId', this.sessionId);\n    },\n\n    resetSession() {\n      // Use our archive method instead of duplicating logic\n      this.archiveSession();\n\n      // Clear and start fresh\n      this.messageList = [];\n      this.createNewSession();\n\n      this.addMessage({\n        author: 'bot',\n        type: 'text',\n        data: { \n          text: \"👋 Hi! I'm Sophia, an AI agent here with Valley Connection. How can I help you today?\"\n        }\n      });\n    },\n\n    async onMessageWasSent(message) {\n      this.showTypingIndicator = 'bot';\n\n      // Add timestamp to user message\n      this.addMessage({\n        author: 'me',\n        type: 'text',\n        data: { text: message.data.text },\n        timestamp: new Date().toISOString()\n      });\n\n      try {\n        console.log('Sending message:', message.data.text);\n        const requestBody = JSON.stringify({\n          message: message.data.text,\n          type: 'user_message',\n          timestamp: new Date().toISOString(),\n          metadata: {\n            sessionId: this.sessionId\n          }\n        });\n        \n        const response = await fetch(this.apiUrl, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          },\n          credentials: 'omit',\n          body: requestBody\n        });\n        \n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        \n        const data = await response.json();\n        console.log('Raw response data:', data);\n        \n        // Get the conversation summary from the response array\n        const conversationSummary = Array.isArray(data) \n          ? data.find(item => item.conversationSummary)?.conversationSummary \n          : (data.conversationSummary || 'Chat session');\n        \n        console.log('Extracted conversation summary:', conversationSummary);\n        \n        if (conversationSummary === 'Chat session') {\n          console.warn('No conversation summary found in response:', data);\n        }\n        \n        // Handle the response\n        const botMessage = this.extractMessage(data);\n        \n        // Send first message immediately\n        if (botMessage.messages.length > 0) {\n          const messageToAdd = {\n            author: 'bot',\n            type: 'text',\n            data: { text: botMessage.messages[0] },\n            summary: conversationSummary,\n            timestamp: new Date().toISOString()\n          };\n          console.log('Adding message with summary:', messageToAdd);\n          await this.addMessage(messageToAdd);\n        }\n\n        // Send remaining messages with delays\n        if (botMessage.messages.length > 1) {\n          for (let i = 1; i < botMessage.messages.length; i++) {\n            await new Promise(resolve => setTimeout(resolve, 1000));\n            await this.addMessage({\n              author: 'bot',\n              type: 'text',\n              data: { text: botMessage.messages[i] },\n              summary: conversationSummary,\n              timestamp: new Date().toISOString()\n            });\n          }\n        }\n\n        // Update the chat summary in previousChats\n        const currentChat = this.previousChats.find(chat => chat.sessionId === this.sessionId);\n        if (currentChat) {\n          currentChat.summary = conversationSummary;\n          this.savePreviousChats();\n        }\n\n      } catch (error) {\n        logError(error, 'Message sending failed');\n        this.addMessage({\n          author: 'bot',\n          type: 'text',\n          data: { text: \"I'm sorry, I'm having trouble connecting. Please try again.\" }\n        });\n      } finally {\n        this.showTypingIndicator = '';\n      }\n    },\n\n    extractMessage(data) {\n      try {\n        let messageText = '';\n        \n        if (Array.isArray(data)) {\n          // Find the object with agentResponse in the array\n          const responseObj = data.find(item => item.agentResponse);\n          messageText = responseObj?.agentResponse || \"I'm here to help! How can I assist you today? (error)\";\n        } else if (data.agentResponse) {\n          messageText = data.agentResponse;\n        } else {\n          messageText = \"I'm here to help! How can I assist you today? (error)\";\n        }\n\n        // Split into multiple messages if there are line breaks, but handle double newlines\n        const messages = messageText\n          .split('\\n')\n          .map(msg => msg.trim())\n          .filter(msg => msg.length > 0)\n          // Remove any remaining \\n characters\n          .map(msg => msg.replace(/\\\\n/g, ''));\n\n        return { messages };\n      } catch (error) {\n        console.error('Error extracting message:', error);\n        return { \n          messages: [\"I'm here to help! How can I assist you today? (error)\"]\n        };\n      }\n    },\n\n    addMessage(message) {\n      // Ensure message has a timestamp in local Phoenix time\n      if (!message.timestamp) {\n        const now = new Date();\n        // Convert to Phoenix time by adjusting for UTC-7\n        const phoenixOffset = -7 * 60; // -7 hours in minutes\n        const phoenixTime = new Date(now.getTime() + (now.getTimezoneOffset() + phoenixOffset) * 60000);\n        message.timestamp = phoenixTime.toISOString();\n      }\n      \n      console.log('Adding message:', message);\n      this.messageList = [...this.messageList, message];\n      \n      // Scroll to bottom after adding message\n      this.$nextTick(() => {\n        const container = document.querySelector('.conversation-container');\n        if (container) {\n          container.scrollTop = container.scrollHeight;\n        }\n      });\n      \n      // Archive after each new message\n      this.archiveSession();\n    },\n\n    openChat() {\n      this.isChatOpen = true;\n      this.showHomeScreen = true;\n      this.newMessagesCount = 0;\n      // Load previous chats when opening the widget\n      this.loadPreviousChats();\n    },\n\n    closeChat() {\n      this.archiveSession();\n      this.isChatOpen = false;\n    },\n\n    handleOnType() {\n      console.log('User is typing...')\n    },\n\n    downloadTranscript() {\n      const transcript = this.messageList.map(msg => {\n        const author = msg.author === 'me' ? 'You' : 'Sophia';\n        // Convert stored ISO timestamp to Phoenix local time\n        const timestamp = msg.timestamp ? \n          new Date(msg.timestamp).toLocaleString('en-US', {\n            timeZone: 'America/Phoenix',\n            hour12: true,\n            year: 'numeric',\n            month: '2-digit',\n            day: '2-digit',\n            hour: '2-digit',\n            minute: '2-digit',\n            second: '2-digit'\n          }) : \n          new Date().toLocaleString('en-US', {timeZone: 'America/Phoenix'});\n        return `${timestamp} - ${author}: ${msg.data.text}`;\n      }).join('\\n\\n');\n\n      // Create the file content with a header\n      const fileContent = `Chat Transcript with Sophia\\n` +\n        `Generated on: ${new Date().toLocaleString()}\\n` +\n        `Session ID: ${this.sessionId}\\n\\n` +\n        `${transcript}`;\n\n      // Create blob and download link\n      const blob = new Blob([fileContent], { type: 'text/plain' });\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `chat-transcript-${new Date().toISOString().slice(0,10)}.txt`;\n      document.body.appendChild(a);\n      a.click();\n      window.URL.revokeObjectURL(url);\n      document.body.removeChild(a);\n    },\n\n    startNewChat() {\n      this.messageList = [];\n      this.createNewSession();\n      \n      // First add the main welcome message\n      this.addMessage({\n        author: 'bot',\n        type: 'text',\n        data: { \n          text: `👋 Hi! I'm Sophia, an AI agent here with **Valley Connection AZ**. I can help you with:\n\n- Information about our business networking community\n- Details about our upcoming events and mastermind groups\n- Membership benefits and opportunities\n- Education & training programs like Real Estate Mastery\n- Locations of our meetings in Phoenix, Gilbert, Queen Creek, and other Valley areas\n- How to get involved with our thriving business community`\n        },\n        isWelcomeMessage: true\n      });\n\n      // Add the final question as a threaded message, also marked as welcome\n      this.$nextTick(() => {\n        this.addMessage({\n          author: 'bot',\n          type: 'text',\n          data: { \n            text: 'How can I assist you today?' \n          },\n          isWelcomeMessage: true,\n          isThreaded: true\n        });\n      });\n      \n      // Set showHomeScreen to false after adding the messages\n      this.$nextTick(() => {\n        this.showHomeScreen = false;\n      });\n    },\n\n    goToHome() {\n      this.archiveSession();\n      this.loadPreviousChats();\n      this.messageList = [];\n      this.isChatOpen = true;\n      this.showHomeScreen = true;\n      this.showAllChats = false;\n    },\n\n    loadPreviousChats() {\n      const savedChats = localStorage.getItem('previousChats');\n      if (savedChats) {\n        try {\n          this.previousChats = JSON.parse(savedChats);\n          // Sort chats by last message timestamp, most recent first\n          this.previousChats.sort((a, b) => {\n            const aLastMsg = a.messages[a.messages.length - 1];\n            const bLastMsg = b.messages[b.messages.length - 1];\n            return new Date(bLastMsg?.timestamp || b.timestamp) - \n                   new Date(aLastMsg?.timestamp || a.timestamp);\n          });\n          console.log('Loaded recent conversations:', this.previousChats);\n        } catch (e) {\n          console.error('Error loading recent conversations:', e);\n          this.previousChats = [];\n        }\n      }\n    },\n\n    savePreviousChats() {\n      // Sort by last message timestamp before saving\n      this.previousChats = this.previousChats\n        .sort((a, b) => {\n          const aLastMsg = a.messages[a.messages.length - 1];\n          const bLastMsg = b.messages[b.messages.length - 1];\n          return new Date(bLastMsg?.timestamp || b.timestamp) - \n                 new Date(aLastMsg?.timestamp || a.timestamp);\n        })\n        .slice(0, 10); // Keep only the 10 most recent\n      \n      localStorage.setItem('previousChats', JSON.stringify(this.previousChats));\n      console.log('Saved recent conversations:', this.previousChats);\n    },\n\n    loadChat(chat) {\n      this.showHomeScreen = false;\n      console.log('Loading chat:', chat);\n      this.sessionId = chat.sessionId;\n      this.messageList = [...chat.messages]; // Create a new array to ensure reactivity\n      this.isChatOpen = true;\n      \n      // Scroll to bottom after loading chat\n      this.$nextTick(() => {\n        const container = document.querySelector('.conversation-container');\n        if (container) {\n          container.scrollTop = container.scrollHeight;\n        }\n      });\n    },\n\n    getChatPreview(chat) {\n      // First check if we have a valid summary\n      if (chat.summary && chat.summary !== 'Chat session') {\n        return chat.summary.length > 50 ? chat.summary.substring(0, 50) + '...' : chat.summary;\n      }\n      \n      // If no summary, find the first non-welcome message\n      const firstNonWelcomeMessage = chat.messages.find(msg => !msg.isWelcomeMessage);\n      const previewText = firstNonWelcomeMessage?.data?.text || 'New chat';\n      \n      return previewText.length > 50 ? previewText.substring(0, 50) + '...' : previewText;\n    },\n\n    formatDate(timestamp) {\n      const date = new Date(timestamp);\n      const now = new Date();\n      const diffInMs = now - date;\n      const diffInDays = Math.floor(diffInMs / (1000 * 60 * 60 * 24));\n      const diffInHours = Math.floor(diffInMs / (1000 * 60 * 60));\n      const diffInMinutes = Math.floor(diffInMs / (1000 * 60));\n      \n      // Format time\n      const time = date.toLocaleTimeString('en-US', { \n        hour: 'numeric', \n        minute: '2-digit',\n        hour12: true \n      });\n      \n      // If less than 1 minute ago\n      if (diffInMinutes < 1) {\n        return 'Just now';\n      }\n      \n      // If less than 1 hour ago\n      if (diffInHours < 1) {\n        return `${diffInMinutes}m ago`;\n      }\n      \n      // If less than 24 hours ago\n      if (diffInDays < 1) {\n        return `${diffInHours}h ago`;\n      }\n      \n      // If today (after midnight)\n      if (date.toDateString() === now.toDateString()) {\n        return `Today at ${time}`;\n      }\n      \n      // If yesterday\n      const yesterday = new Date(now);\n      yesterday.setDate(yesterday.getDate() - 1);\n      if (date.toDateString() === yesterday.toDateString()) {\n        return `Yesterday at ${time}`;\n      }\n      \n      // If within the last 7 days\n      if (diffInDays < 7) {\n        return date.toLocaleDateString('en-US', { weekday: 'long' });\n      }\n      \n      // If within the current year\n      if (date.getFullYear() === now.getFullYear()) {\n        return date.toLocaleDateString('en-US', { \n          month: 'short', \n          day: 'numeric'\n        });\n      }\n      \n      // If more than a year ago\n      return date.toLocaleDateString('en-US', { \n        month: 'short', \n        day: 'numeric',\n        year: 'numeric'\n      });\n    },\n\n    archiveSession() {\n      if (this.messageList.length > 0) {\n        // Get all bot messages with summaries, excluding welcome messages\n        const botMessages = this.messageList.filter(msg => \n          msg.author === 'bot' && \n          msg.summary && \n          msg.summary !== 'Chat session' &&\n          !msg.isWelcomeMessage\n        );\n        \n        // Get the most recent summary, or fall back to finding a meaningful message\n        let chatSummary = 'Chat session';\n        \n        if (botMessages.length > 0) {\n          // Use the most recent valid summary\n          chatSummary = botMessages[botMessages.length - 1].summary;\n        } else {\n          // Try to find the first non-welcome message as a fallback\n          const firstNonWelcomeMessage = this.messageList.find(msg => !msg.isWelcomeMessage);\n          if (firstNonWelcomeMessage) {\n            chatSummary = firstNonWelcomeMessage.data.text.substring(0, 50);\n          }\n        }\n\n        // Get timestamp from the last message instead of current time\n        const lastMessage = this.messageList[this.messageList.length - 1];\n        const timestamp = lastMessage?.timestamp || new Date().toISOString();\n        \n        // Find existing chat with this sessionId\n        const existingChatIndex = this.previousChats.findIndex(\n          chat => chat.sessionId === this.sessionId\n        );\n        \n        const chatToSave = {\n          sessionId: this.sessionId,\n          messages: this.messageList,\n          timestamp: timestamp, // Use last message timestamp\n          summary: chatSummary\n        };\n\n        // Update or add the chat\n        if (existingChatIndex !== -1) {\n          // Update existing chat\n          this.previousChats[existingChatIndex] = chatToSave;\n        } else {\n          // Add new chat to the beginning\n          this.previousChats = [chatToSave, ...this.previousChats];\n        }\n        \n        this.savePreviousChats();\n        console.log('Archived chat with summary:', chatSummary, 'timestamp:', timestamp);\n      }\n    },\n\n    sendMessage() {\n      if (!this.newMessage.trim()) return;\n      \n      const message = {\n        data: { text: this.newMessage.trim() }\n      };\n      \n      // Clear input\n      this.newMessage = '';\n      \n      // Let onMessageWasSent handle the message addition\n      this.onMessageWasSent(message);\n    },\n\n    renderMarkdown(text) {\n      try {\n        // Clean up the text first\n        const cleanText = text\n          // Replace escaped newlines with actual newlines\n          .replace(/\\\\n/g, '\\n')\n          // Clean up any HTML entities\n          .replace(/&amp;/g, '&')\n          .replace(/&lt;/g, '<')\n          .replace(/&gt;/g, '>')\n          .replace(/&#39;/g, \"'\")\n          .replace(/&quot;/g, '\"')\n          .trim();\n\n        // Configure marked options\n        marked.setOptions({\n          breaks: true,  // Convert \\n to <br>\n          sanitize: false,  // Allow HTML\n          gfm: true,  // GitHub Flavored Markdown\n        });\n        \n        return marked(cleanText);\n      } catch (error) {\n        console.error('Markdown rendering error:', error);\n        return text;  // Fallback to plain text if markdown fails\n      }\n    },\n\n    isBotThreadStart(idx) {\n      return (\n        this.messageList[idx].author !== 'me' && \n        (idx === 0 || this.messageList[idx - 1].author === 'me')\n      );\n    },\n\n    isBotThreadMiddle(idx) {\n      return (\n        this.messageList[idx].author !== 'me' &&\n        idx > 0 &&\n        idx < this.messageList.length - 1 &&\n        this.messageList[idx - 1].author !== 'me' &&\n        this.messageList[idx + 1].author !== 'me'\n      );\n    },\n\n    isBotThreadEnd(idx) {\n      return (\n        this.messageList[idx].author !== 'me' &&\n        (idx === this.messageList.length - 1 || this.messageList[idx + 1].author === 'me') &&\n        idx > 0 &&\n        this.messageList[idx - 1].author !== 'me'\n      );\n    },\n\n    onStatusChanged(status) {\n      this.systemStatus = status;\n    },\n\n    showSystemStatus() {\n      // Get the ServiceStatus component instance\n      this.serviceStatus = this.$refs.serviceStatus;\n      \n      // Only proceed if we have the services data\n      if (this.serviceStatus) {\n        this.showStatusPage = true;\n        this.showHomeScreen = false;\n      } else {\n        console.error('ServiceStatus component not found');\n      }\n    },\n\n    getSummaryText() {\n      if (this.systemStatus.status === 'OK') {\n        return 'All Systems Operational';\n      } else if (this.systemStatus.status === 'WARN') {\n        return 'Degraded Performance';\n      } else if (this.systemStatus.status === 'CRIT') {\n        return 'Service Disruption';\n      }\n      return 'Checking Status...';\n    },\n\n    handleInputFocus() {\n      if (!this.isMobileDevice) return;\n      \n      this.isKeyboardOpen = true;\n      this.$nextTick(() => {\n        // Keep messages in viewport when keyboard opens\n        const messagesWrapper = document.querySelector('.messages-wrapper');\n        if (messagesWrapper) {\n          const messages = messagesWrapper.querySelectorAll('.message-item');\n          if (messages.length <= 3) { // For few messages\n            window.scrollTo(0, 0);\n          } else {\n            const lastMessage = messages[messages.length - 1];\n            lastMessage.scrollIntoView({ behavior: 'smooth' });\n          }\n        }\n      });\n    },\n\n    handleInputBlur() {\n      if (!this.isMobileDevice) return;\n      this.isKeyboardOpen = false;\n    },\n\n    handleViewportResize() {\n      if (!this.isMobileDevice) return;\n      \n      const newHeight = window.visualViewport?.height || window.innerHeight;\n      const keyboardHeight = this.viewportHeight - newHeight;\n      if (newHeight < this.viewportHeight) {\n        this.isKeyboardOpen = true;\n        document.documentElement.style.setProperty('--keyboard-height', `${keyboardHeight}px`);\n        // Adjust scroll position for few messages\n        const messages = document.querySelectorAll('.message-item');\n        if (messages.length <= 3) {\n          window.scrollTo(0, 0);\n        }\n      } else {\n        this.isKeyboardOpen = false;\n        document.documentElement.style.setProperty('--keyboard-height', '0px');\n      }\n      this.viewportHeight = newHeight;\n    },\n\n    scrollToBottom() {\n      this.$nextTick(() => {\n        const container = document.querySelector('.conversation-container');\n        if (container) {\n          container.scrollTop = container.scrollHeight;\n        }\n      });\n    },\n\n    getMostRecentChatPreview() {\n      return this.getMostRecentChatSummary();\n    },\n\n    resumeRecentChat() {\n      if (this.previousChats.length === 0) return;\n      \n      const recentChat = this.previousChats[0];\n      this.loadChat(recentChat);\n      this.isChatOpen = true;\n      this.showHomeScreen = false;\n    },\n\n    getMostRecentChatSummary() {\n      if (this.previousChats.length === 0) return '';\n      const recentChat = this.previousChats[0];\n      \n      // Only return summary if API has provided one\n      if (recentChat.summary) {\n        return recentChat.summary;\n      }\n      return 'New chat'; // Default to \"New chat\" when no summary exists\n    },\n\n    hasFollowingBotMessage(idx) {\n      // Check if the next message exists and is from the bot\n      return idx < this.messageList.length - 1 && this.messageList[idx + 1].author !== 'me';\n    }\n  },\n}\n</script>\n\n<style>\n/* Add these styles to your CSS */\n.chat-window {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  height: -webkit-fill-available;\n  will-change: transform;\n  contain: content;\n}\n\n.chat-window-inner {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  overflow: hidden;\n}\n\n.conversation-container {\n  position: relative;\n  flex: 1;\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n  padding: 16px;\n  min-height: 0;\n  background-color: var(--chat-background);\n  display: flex;\n  flex-direction: column;\n}\n\n.messages-wrapper {\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  margin-top: auto;\n  justify-content: flex-start;\n  contain: layout style;\n}\n\n.chat-container {\n  flex: 1;\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n}\n\n.chat-container.keyboard-open {\n  transform: translateY(calc(-1 * var(--keyboard-height, 270px)));\n  transition: transform 0.3s ease;\n  height: calc(100% - var(--keyboard-height, 270px));\n}\n\n.custom-header {\n  position: sticky;\n  top: 0;\n  z-index: 10;\n  background: var(--chat-header-bg);\n  color: var(--chat-header-text);\n}\n\n.user-input {\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  z-index: 10;\n  background: var(--chat-input-bg);\n  padding: 8px;\n  padding-bottom: env(safe-area-inset-bottom, 8px);\n  transition: transform 0.3s ease;\n}\n\n.user-input.keyboard-open {\n  bottom: env(keyboard-inset-height, 0);\n  padding-bottom: env(safe-area-inset-bottom, 8px);\n  transform: translateY(calc(-1 * var(--keyboard-height, 270px)));\n}\n\n@media screen and (max-width: 600px) {\n  .chat-window {\n    height: 100%;\n    height: -webkit-fill-available;\n  }\n  \n  .messages-wrapper {\n    padding-bottom: env(safe-area-inset-bottom, 16px);\n  }\n  \n  .chat-container.keyboard-open .messages-wrapper {\n    transform: translateY(0);\n  }\n  \n  /* Ensure messages stay visible with few messages */\n  .conversation-container:only-child {\n    justify-content: flex-start;\n  }\n}\n\n/* Add viewport height calculation on mount */\n:root {\n  --vh: 1vh;\n\n  /* Theme CSS Variables */\n  --chat-primary: v-bind('currentTheme.primary');\n  --chat-secondary: v-bind('currentTheme.secondary');\n  --chat-background: v-bind('currentTheme.messages.background');\n  \n  /* Header */\n  --chat-header-bg: v-bind('currentTheme.header.background');\n  --chat-header-text: v-bind('currentTheme.header.text');\n  --chat-header-button-bg: v-bind('currentTheme.header.buttons.background');\n  --chat-header-button-hover: v-bind('currentTheme.header.buttons.hover');\n  \n  /* Messages */\n  --chat-message-user-bg: v-bind('currentTheme.messages.user.background');\n  --chat-message-user-text: v-bind('currentTheme.messages.user.text');\n  --chat-message-bot-bg: v-bind('currentTheme.messages.bot.background');\n  --chat-message-bot-text: v-bind('currentTheme.messages.bot.text');\n  --chat-message-timestamp: v-bind('currentTheme.messages.timestamp');\n  \n  /* Input */\n  --chat-input-bg: v-bind('currentTheme.input.background');\n  --chat-input-text: v-bind('currentTheme.input.text');\n  --chat-input-placeholder: v-bind('currentTheme.input.placeholder');\n  --chat-input-border: v-bind('currentTheme.input.border');\n  --chat-input-button-default: v-bind('currentTheme.input.button.default');\n  --chat-input-button-active: v-bind('currentTheme.input.button.active');\n  \n  /* Preview */\n  --chat-preview-bg: v-bind('currentTheme.preview.background');\n  --chat-preview-text: v-bind('currentTheme.preview.text');\n  --chat-preview-timestamp: v-bind('currentTheme.preview.timestamp');\n  --chat-preview-shadow: v-bind('currentTheme.preview.shadow');\n}\n\n/* Markdown styling */\n.message-bubble ul {\n  margin: 0.5em 0;\n  padding-left: 1.5em;\n}\n\n.message-bubble li {\n  margin: 0.25em 0;\n}\n\n.message-bubble p {\n  margin: 0.5em 0;\n}\n\n.message-bubble p:first-child {\n  margin-top: 0;\n}\n\n.message-bubble p:last-child {\n  margin-bottom: 0;\n}\n\n/* Only apply keyboard adjustments on mobile */\n@media screen and (max-width: 600px) {\n  .chat-container.keyboard-open {\n    transform: translateY(calc(-1 * var(--keyboard-height, 270px)));\n    transition: transform 0.3s ease;\n    height: calc(100% - var(--keyboard-height, 270px));\n  }\n\n  .user-input.keyboard-open {\n    bottom: env(keyboard-inset-height, 0);\n    padding-bottom: env(safe-area-inset-bottom, 8px);\n    transform: translateY(calc(-1 * var(--keyboard-height, 270px)));\n  }\n}\n\n/* Desktop specific styles */\n@media screen and (min-width: 601px) {\n  .chat-container {\n    height: 100%;\n  }\n\n  .user-input {\n    position: sticky;\n    bottom: 0;\n    transform: none !important;\n  }\n\n  .messages-wrapper {\n    margin-top: 0;\n  }\n}\n\n/* Add styles for the floating preview */\n.recent-chat-preview {\n  position: absolute !important;\n  bottom: calc(100% + 16px) !important;  /* Position above launcher */\n  right: 0 !important;\n  background: var(--chat-preview-bg) !important;\n  padding: 12px 16px !important;\n  border-radius: 12px !important;\n  box-shadow: 0 4px 12px var(--chat-preview-shadow) !important;\n  width: 280px !important;\n  cursor: pointer !important;\n  transition: all 0.2s ease !important;\n}\n\n.recent-chat-preview-text {\n  font-family: 'Work Sans', sans-serif !important;\n  font-size: 14px !important;\n  color: var(--chat-preview-text) !important;\n  margin: 0 !important;\n  white-space: nowrap !important;\n  overflow: hidden !important;\n  text-overflow: ellipsis !important;\n}\n\n.recent-chat-preview-time {\n  font-family: 'Work Sans', sans-serif !important;\n  font-size: 12px !important;\n  color: var(--chat-preview-timestamp) !important;\n  margin-top: 4px !important;\n}\n\n/* Message Styles */\n.message-item {\n  display: flex;\n  flex-direction: column;\n}\n\n.message-content {\n  display: flex;\n  gap: 8px;\n  align-items: flex-start;\n}\n\n.user-message .message-bubble {\n  background-color: var(--chat-message-user-bg);\n  color: var(--chat-message-user-text);\n  margin-left: auto;\n}\n\n.bot-message .message-bubble {\n  background-color: var(--chat-message-bot-bg);\n  color: var(--chat-message-bot-text);\n}\n\n.message-bubble {\n  padding: 12px 16px;\n  border-radius: 12px;\n  max-width: 80%;\n  word-break: break-word;\n}\n\n/* Input Styling */\n.input-wrapper {\n  display: flex;\n  gap: 8px;\n  padding: 8px;\n  border: 1px solid var(--chat-input-border);\n  border-radius: 8px;\n  background: var(--chat-input-bg);\n}\n\n.input-wrapper input {\n  flex: 1;\n  border: none;\n  outline: none;\n  background: transparent;\n  color: var(--chat-input-text);\n}\n\n.input-wrapper input::placeholder {\n  color: var(--chat-input-placeholder);\n}\n\n.input-wrapper button {\n  padding: 8px;\n  border: none;\n  background: transparent;\n  color: var(--chat-input-button-default);\n  cursor: pointer;\n  transition: color 0.2s ease;\n}\n\n.input-wrapper button.active {\n  color: var(--chat-input-button-active);\n}\n\n/* Header Button Styling */\n.custom-header button {\n  padding: 8px;\n  border: none;\n  border-radius: 4px;\n  background: var(--chat-header-button-bg);\n  color: var(--chat-header-text);\n  cursor: pointer;\n  transition: background-color 0.2s ease;\n}\n\n.custom-header button:hover {\n  background: var(--chat-header-button-hover);\n}\n</style>","import { Widget } from './components/ChatWidget/index.vue'\n\n// Create the mount function\nfunction mount(el, config = {}) {\n  if (!window.Vue) {\n    throw new Error('Vue is not loaded');\n  }\n  const { createApp, h } = window.Vue;\n\n  // Create a wrapper div if string selector is provided\n  const container = typeof el === 'string' ? document.querySelector(el) : el;\n  if (!container) {\n    throw new Error('Mount element not found');\n  }\n\n  // Create app instance using global Vue\n  const app = createApp({\n    name: 'SophosicChatApp',\n    render() {\n      return h(Widget, { config });\n    }\n  });\n\n  // Mount with proper DOM handling\n  try {\n    app.mount(container);\n    return app;\n  } catch (err) {\n    console.error('Failed to mount app:', err);\n    throw err;\n  }\n}\n\n// Create the library object\nconst SophosicChat = {\n  Widget,\n  mount\n};\n\n// Add to window object if in browser\nif (typeof window !== 'undefined') {\n  window.SophosicChat = SophosicChat;\n}\n\n// Export named exports and default\nexport { Widget, mount }\nexport default SophosicChat ","module.exports = __WEBPACK_EXTERNAL_MODULE__154__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.j = 524;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = Object(typeof self !== 'undefined' ? self : this)[\"webpackChunkSophosicChat\"] = Object(typeof self !== 'undefined' ? self : this)[\"webpackChunkSophosicChat\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], () => (__webpack_require__(8486)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["root","factory","exports","module","require","define","amd","self","this","__WEBPACK_EXTERNAL_MODULE__154__","key","class","$options","overallStatus","status","_createElementBlock","_hoisted_1","_createElementVNode","onClick","_cache","$event","$data","isExpanded","_hoisted_2","_normalizeClass","toLowerCase","_hoisted_3","_toDisplayString","getSummaryText","xmlns","width","height","viewBox","fill","stroke","points","_hoisted_4","_Fragment","_renderList","services","service","name","_hoisted_5","_hoisted_6","_hoisted_7","_createTextVNode","href","statusPageUrl","target","rel","title","d","x1","y1","x2","y2","_hoisted_8","_hoisted_9","statusText","_createCommentVNode","data","endpoint","model","components","namespace","details","contextLength","speed","pricing","input","output","checkInterval","methods","checkServiceStatus","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","componentStatuses","statusUrl","response","wrap","_context2","prev","next","Promise","all","map","_ref","_callee","component","_context","t0","abrupt","fetch","sent","json","indicator","t1","console","error","concat","stop","_x","apply","arguments","some","s","every","updateServiceStatus","checkAllServices","_this2","_callee3","_iterator","_step","_context3","_createForOfIteratorHelper","n","done","value","e","f","finish","mounted","_this3","setInterval","beforeUnmount","clearInterval","computed","watch","handler","newStatus","$emit","deep","__exports__","$props","expandedServices","toggleService","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","props","type","Array","required","Object","serviceName","$forceUpdate","colors","primary","secondary","background","white","gray","success","warning","defaultTheme","header","text","icons","buttons","hover","launcher","shadow","messages","user","bot","timestamp","placeholder","border","button","default","active","preview","ok","warn","crit","API_URL","logError","context","process","__default__","ServiceStatus","SystemStatusPage","theme","sessionId","participants","id","imageUrl","encodeURIComponent","apiUrl","messageList","newMessagesCount","isChatOpen","showTypingIndicator","newMessage","currentTheme","showHomeScreen","previousChats","showAllChats","systemStatus","isStatusHovered","showStatusPage","serviceStatus","chatSummary","isKeyboardOpen","viewportHeight","window","innerHeight","isMobileDevice","hidePreview","displayedChats","slice","isBotTyping","created","_objectSpread","loadSession","loadPreviousChats","rawText","welcomeMessage","setVH","length","method","headers","credentials","Error","log","extractMessage","addMessage","author","$nextTick","$refs","test","navigator","userAgent","addEventListener","handleViewportResize","visualViewport","vh","document","documentElement","style","setProperty","viewport","scrollToBottom","removeEventListener","savedSessionId","localStorage","getItem","createNewSession","Date","now","Math","random","toString","substr","setItem","resetSession","archiveSession","onMessageWasSent","message","_data$find","requestBody","conversationSummary","botMessage","messageToAdd","i","currentChat","toISOString","JSON","stringify","metadata","body","isArray","find","item","summary","resolve","setTimeout","chat","savePreviousChats","messageText","responseObj","agentResponse","split","msg","trim","filter","replace","phoenixOffset","phoenixTime","getTime","getTimezoneOffset","_toConsumableArray","container","querySelector","scrollTop","scrollHeight","openChat","closeChat","handleOnType","downloadTranscript","transcript","toLocaleString","timeZone","hour12","year","month","day","hour","minute","second","join","fileContent","blob","Blob","url","URL","createObjectURL","a","createElement","download","appendChild","click","revokeObjectURL","removeChild","startNewChat","isWelcomeMessage","isThreaded","goToHome","savedChats","parse","sort","b","aLastMsg","bLastMsg","loadChat","getChatPreview","_firstNonWelcomeMessa","substring","firstNonWelcomeMessage","previewText","formatDate","date","diffInMs","diffInDays","floor","diffInHours","diffInMinutes","time","toLocaleTimeString","toDateString","yesterday","setDate","getDate","toLocaleDateString","weekday","getFullYear","_this4","botMessages","lastMessage","existingChatIndex","findIndex","chatToSave","sendMessage","renderMarkdown","cleanText","marked","setOptions","breaks","sanitize","gfm","isBotThreadStart","idx","isBotThreadMiddle","isBotThreadEnd","onStatusChanged","showSystemStatus","handleInputFocus","messagesWrapper","querySelectorAll","scrollTo","scrollIntoView","behavior","handleInputBlur","_window$visualViewpor","newHeight","keyboardHeight","getMostRecentChatPreview","getMostRecentChatSummary","resumeRecentChat","recentChat","hasFollowingBotMessage","mount","el","config","undefined","Vue","_window$Vue","createApp","h","app","render","Widget","err","SophosicChat","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","splice","r","definition","o","defineProperty","enumerable","get","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","forEach","bind","push","__webpack_exports__"],"sourceRoot":""}